name: front-ci
on: [push]

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: üì¨ Caching
        uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/node_modules
            ${{ github.workspace }}/dist
          key: ${{ runner.os }}-vite-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/*.{js,jsx,ts,tsx}') }}
          restore-keys: |
            ${{ runner.os }}-vite-${{ hashFiles('**/yarn.lock') }}-

      - name: üß∞ Instala bibliotecas e depend√™ncias
        run: npm i yarn -g && yarn

      - name: üîç Verifica estiliza√ß√£o do c√≥digo
        run: yarn check-format

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: üì¨ Caching
        uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/node_modules
            ${{ github.workspace }}/dist
          key: ${{ runner.os }}-vite-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/*.{js,jsx,ts,tsx}') }}
          restore-keys: |
            ${{ runner.os }}-vite-${{ hashFiles('**/yarn.lock') }}-

      - name: üß∞ Instala bibliotecas e depend√™ncias
        run: npm i yarn -g && yarn
        
      - name: üßπ Verifica eslint
        run: yarn check-lint

  type-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: üì¨ Caching
        uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/node_modules
            ${{ github.workspace }}/dist
          key: ${{ runner.os }}-vite-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/*.{js,jsx,ts,tsx}') }}
          restore-keys: |
            ${{ runner.os }}-vite-${{ hashFiles('**/yarn.lock') }}-

      - name: üß∞ Instala bibliotecas e depend√™ncias
        run: npm i yarn -g && yarn
        
      - name: üîß Valida tipagens
        run: yarn check-types

  test:
    runs-on: ubuntu-latest
    env:
      VITE_USER_SERVICE_URL: ${{ secrets.VITE_USER_SERVICE_URL }}
      VITE_ROLE_SERVICE_URL: ${{ secrets.VITE_ROLE_SERVICE_URL }}
      VITE_UNIT_SERVICE_URL: ${{ secrets.VITE_UNIT_SERVICE_URL }}
      VITE_PROCESS_MANAGEMENT_SERVICE_URL: ${{ secrets.VITE_PROCESS_MANAGEMENT_SERVICE_URL }}
      VITE_NOTE_SERVICE_URL: ${{ secrets.VITE_NOTE_SERVICE_URL }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: üì¨ Caching
        uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/node_modules
            ${{ github.workspace }}/dist
          key: ${{ runner.os }}-vite-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/*.{js,jsx,ts,tsx}') }}
          restore-keys: |
            ${{ runner.os }}-vite-${{ hashFiles('**/yarn.lock') }}-

      - name: üß∞ Instala bibliotecas e depend√™ncias
        run: npm i yarn -g && yarn 

      - name: üß™ Roda su√≠te de testes
        timeout-minutes: 0.5
        continue-on-error: true
        run: |
          export NODE_OPTIONS="--max_old_space_size=32768"
          yarn test

    timeout-minutes: 2
    continue-on-error: true

  build:
    needs: [format, lint, type-check]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: üì¨ Caching
        uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/node_modules
            ${{ github.workspace }}/dist
          key: ${{ runner.os }}-vite-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/*.{js,jsx,ts,tsx}') }}
          restore-keys: |
            ${{ runner.os }}-vite-${{ hashFiles('**/yarn.lock') }}-

      - name: üß∞ Instala bibliotecas e depend√™ncias
        run: npm i yarn -g && yarn

      - name: üì¶ Builda o projeto
        run: yarn build
        
  sonarcloud:
    name: sonarcloud
    runs-on: ubuntu-latest
    continue-on-error: true
    env:
      VITE_USER_SERVICE_URL: ${{ secrets.VITE_USER_SERVICE_URL }}
      VITE_ROLE_SERVICE_URL: ${{ secrets.VITE_ROLE_SERVICE_URL }}
      VITE_UNIT_SERVICE_URL: ${{ secrets.VITE_UNIT_SERVICE_URL }}
      VITE_PROCESS_MANAGEMENT_SERVICE_URL: ${{ secrets.VITE_PROCESS_MANAGEMENT_SERVICE_URL }}
      VITE_NOTE_SERVICE_URL: ${{ secrets.VITE_NOTE_SERVICE_URL }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: üì¨ Caching
        uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/node_modules
            ${{ github.workspace }}/dist
          key: ${{ runner.os }}-vite-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/*.{js,jsx,ts,tsx}') }}
          restore-keys: |
            ${{ runner.os }}-vite-${{ hashFiles('**/yarn.lock') }}-

      - name: üß∞ Instala bibliotecas e depend√™ncias
        run: npm i -g yarn && yarn

      - name: üìú Relat√≥rio do eslint
        run: npx eslint -f json -o reports/eslint-report.json src || true

      - name: üß™ Testes e cobertura
        run: VITEST_REPORTERS=vitest-sonar-reporter yarn test --coverage

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}